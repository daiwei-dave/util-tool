

1.@value注解

Spring 3支持@value注解的方式获取properties文件中的配置值，大简化了读取配置文件的代码。

1、在applicationContext.xml文件中配置properties文件

复制代码
<bean id="appProperty"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
        <array>
            <value>classpath:app.properties</value>
        </array>
    </property>
</bean>
复制代码
2、在bean中使用@value注解获取配置文件的值

@Value("${chengmi_crawl_timer_enable}")
private Boolean timerEnabled;
即使给变量赋了初值也会以配置文件的值为准。




3.@Scheduled   @Scheduled 可以将一个方法标识为可定时执行的。但必须指明cron()，fixedDelay(),或者fixedRate()属性。
注解的方法必须是无输入参数并返回空类型void的。他会在服务启动完毕后马上执行
@see http://www.cnblogs.com/davidwang456/p/5680088.html


fixed-delay  :  表示从上一个任务完成到下一个任务开始的间隔, 单位是毫秒,如fixedDelay = 10 * 60 * 1000 表示间隔10分钟
initial-delay :  表示第一次运行前需要延迟的时间，单位是毫秒
fixed-rate    :  表示从上一个任务开始到下一个任务开始的间隔, 单位是毫秒（如果某次任务开始时上次任务还没有结束，那么在上次任务执行完成时，当前任务会立即执行）



@see  http://blog.csdn.net/dyccsxg/article/details/9246703



4.depends-on
②depends-on是指指定Bean初始化及销毁时的顺序，使用depends-on属性指定的Bean要先初始化完毕后才初始化当前Bean,由于只有"singleton"Bean才能被Spring管理销毁，所以当指定的Bean都是"singleton"时，使用depends-on属性指定的Bean要在指定的Bean之后销毁。
配置代码：
<bean id="helloApi" class="com.feng.spring.chapter2.helloworld.HelloApi">
</bean>
<bean id="decorator"  
    class="cn.javass.spring.chapter3.bean.HelloApiDecorator"  
    depends-on="helloApi">  
    <property name="helloApi"><ref bean="helloApi"/></property>  
</bean>  

@see  http://blog.csdn.net/howlaa/article/details/8475630
