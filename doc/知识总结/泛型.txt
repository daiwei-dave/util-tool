
一。
优点：
1.可以有效避免强制类型转换

2.将类型匹配问题，由运行时报错转为编译期

3.使编写的方法对类型要求更加通用

如：
public class SeckillResult<T> implements Serializable{}   //T就如一个类型变量

private T first; // uses the type variable

Note
It is common practice to use uppercase letters for type variables, and to
keep them short. The Java library uses the variable E for the element type
of a collection, K and V for key and value types of a table, and T (and the
neighboring letters U and S, if necessary) for “any type at all”.

@param c  collection containing elements to be added to this list
Collection<? extends E> c   list的泛型     

/**
     * 
     * @param entityType 
     * @param idType 即 sql type
     * @param id   parameter形参
     * @return T为return type  <T>为实现了某些接口
     */

public <T> T findById(Class<T> entityType, Class<?> idType, Serializable id) {









二。
1.泛型类：运行时在指定
