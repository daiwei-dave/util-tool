#dubbo\u5168\u5C40\u914D\u7F6E

#dubbo启动时要加载的容器
dubbo.container=spring
#应用名
dubbo.application.name=mars-ground-platform-standalone-100
#应用负责人
dubbo.application.owner=
#注册中心服务器地址，如果地址没有端口缺省为9090，同一集群内的多个地址用逗号分隔，如：ip:port,ip:port，不同集群的注册中心，请配置多个<dubbo:registry>标签
provider与consumer的address要对应保持一致
#如：ehm.dubbo.registry.address=127.0.0.1:2181，sso.dubbo.registry.address=10.128.31.110:2181,10.128.31.96:2181,10.128.16.218:2181
dubbo.registry.address=127.0.0.1:2181


#注册中心地址协议，支持dubbo, http, local三种协议，分别表示，dubbo地址，http地址，本地注册中心
dubbo.protocol.name=dubbo
#设为-1表示无限制？
dubbo.protocol.port=-1
#使用文件缓存注册中心地址列表及服务提供者列表，应用重启时将基于此文件恢复，注意：两个注册中心不能使用同一文件存储
dubbo.registry.file=.cache/registry_cache.properties

#负载均衡策略，可选值：random,roundrobin,leastactive，分别表示：随机，轮循，最少活跃调用
dubbo.service.loadbalance=roundrobin
dubbo.spring.config=classpath:applicationContext.xml
dubbo.provider.groupId=gome-platform-server

#启动时检查提供者是否存在，true报错，false忽略，是设置check的缺省值，如果配置中有显式的声明，如：<dubbo:reference check="true"/>，不会受影响。
dubbo.consumer.check=false

#启动时检查提供者是否存在，true报错，false忽略，强制改变所有reference的check值，就算配置中有声明，也会被覆盖。
dubbo.reference.check=false

#启动时检查注册是否存在，true报错，false忽略
dubbo.registry.check=false


dubbo.shutdown.hook=true


#配置日志文件路径
dubbo.log4j.file=logs/dubbo-demo-consumer.log

#dubbo启动入口
dubbo.server.launcher=com.gome.platform.basicdata.BasicdataLauncher



