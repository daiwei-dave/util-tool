struts2:

1.优点：
1.将请求/响应部分与代码分离，减少代码数量便于阅读和维护
2.可采用模糊匹配






一。
1.1 <!--指定Web应用的默认编码集.该属性对于处理中文请求参数非常有用,对于获取中文请求参数值,应该将该属性值设置为GBK或者GB2312;   
           提示:当设置该参数为GBK时,相当于调用HttpServletRequest的setCharacterEncoding方法. >  
 <constant name="struts.i18n.encoding" value="UTF-8" />  
  
<!--指定Struts 2默认的ObjectFactory Bean,该属性默认值是spring. >  
 <constant name="struts.objectFactory" value="spring" />  
<!--该属性设置Struts 2应用是否使用开发模式.如果设置该属性为true,则可以在应用出错时显示更多、更友好的出错提示.该属性只接受true和flase两个值,该属性的默认值是false.通常,应用在开发阶段,将该属性设置为true,当进入产品发布阶段后,则该属性设置为false. >  
 <constant name="struts.devMode" value="false" />  
1.2
<action name="itemAdd" class="itemAddAction">没指定method时，struts2会默认调用execute 方法
			<result name="success">/admin/NewItem.jsp</result>
			<result name="input">/admin/NewItem.jsp</result>
		</action>
		
 二、









3.Struts 2的ognl

 1.值栈
1.1 可以在值栈中放入、删除、查询对象。访问值栈中的对象不用“#”。
Struts2总是把当前Action实例放置在栈顶。所以在OGNL中引用Action中的属性也可以省略“#”。

1.2 ValueStack对象。这个对象贯穿整个Action的生命周期（每个Action类的对象实例会拥有一个ValueStack对象）。
当 Struts 2接收到一个.action的请求后，会先建立Action类的对象实例，但并不会调用Action方法，
而是先将Action类的相应属性放到 ValueStack对象的顶层节点（ValueStack对象相当于一个栈）。

public class FindAllTopicAction extends ActionSupport{
private List<Topic> allTopic;		//主题列表
public List<Topic> getAllTopic() {
		return allTopic;
	}

	public void setAllTopic(List<Topic> allTopic) {
		this.allTopic = allTopic;
	}
	public String execute() throws Exception {
		allTopic = result.getList();	//获取分页后的主题列表
		return SUCCESS;
	}
}
在页面上调用时可直接使用
<s:iterator value="allTopic" var="topic">
${topic.date}





4.struts2表单验证





