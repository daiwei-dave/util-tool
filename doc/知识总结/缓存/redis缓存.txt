




一。Redis 简介

Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。
Redis 与其他 key - value 缓存产品有以下三个特点：

1.Redis支持数据的持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用。
可以对部分数据加入内存中，下次访问则无需访问数据库，直接访问内存即可，极大的加快了访问速度，对于热点商品，并发量大的极有意义
2.Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。
3.Redis支持数据的备份，即master-slave模式的数据备份


redis安装
https://github.com/ServiceStack/redis-windows/tree/master/downloads






二。Redis 数据类型
1.String（字符串）
string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。
实例
redis 127.0.0.1:6379> SET name "w3cschool.cn"
OK
redis 127.0.0.1:6379> GET name
"w3cschool.cn"


2.Set（集合）
Redis的Set是string类型的无序集合。
如果插入的是相同的建值则返回为0；
如：
redis 127.0.0.1:6379> sadd w3cschool.cn rabitmq
(integer) 1
redis 127.0.0.1:6379> sadd w3cschool.cn rabitmq
(integer) 0

Redis DEL 命令用于删除已存在的键。不存在的 key 会被忽略。
如果键被删除成功，命令执行后输出 (integer) 1，否则将输出 (integer) 0

Redis Smembers 命令返回集合中的所有的成员。 不存在的集合 key 被视为空集合。
redis 127.0.0.1:6379> SADD myset1 "hello"
(integer) 1
redis 127.0.0.1:6379> SADD myset1 "world"
(integer) 1
redis 127.0.0.1:6379> SMEMBERS myset1
1) "World"
2) "Hello"

3.zset(sorted set：有序集合)
Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。
不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。
zset的成员是唯一的,但分数(score)却可以重复。

4.列表(List)
Redis列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素导列表的头部（左边）或者尾部（右边）

5.哈希(Hash)
Redis hash 是一个string类型的field和value的映射表，hash特别适合用于存储对象。


三。Redis 事务

Redis 事务可以一次执行多个命令， 并且带有以下两个重要的保证：
事务是一个单独的隔离操作：事务中的所有命令都会序列化、按顺序地执行。事务在执行的过程中，不会被其他客户端发送来的命令请求所打断。
事务是一个原子操作：事务中的命令要么全部被执行，要么全部都不执行。
一个事务从开始到执行会经历以下三个阶段：
开始事务。
命令入队。
执行事务。










四。使用redis

1.先启动redis服务：





五。redis缓存的几种方法

使用Redis做集中式缓存

1.使用spring-data-redis 的RedisTemplate进行缓存


2.使用Spring-cache的注解进行缓存


@see https://www.ibm.com/developerworks/cn/opensource/os-cn-spring-cache/

3.使用原始
