









sign  签名



加密/授权必须有这四个参数，并做相关的配置

 private static final String appSecret = "abcdeabcdeabcdeabcdeabcd6";
 private static final String parmasSecret = "SA0CC42AC1581A06";
 private static final String appKey = "00001";
 private static final String paramsKey = "0-00001";
 
 
 
 
 
Url参数加密步骤

一。客服端
1.将所需参数用map集合进行存储，然后转为json字符串

如
String param = JSON.toJSONString(map);


2.对参数进行AES加密
所需参数：1，转为json后的参数 2.parmasSecret

如：
String params = AES.Encrypt(param, paramsSecret);
params.put("params", params);

3.MD5加密获取sign（签名）

所需参数1.AES加密后的参数2.appSecret


如：
String sign = MD5.encodeByMd5AndSalt(params, appKeyValue);



4.所有步骤完成后url上应该有如下参数
{sign=95460C08375158DB95D1E081FA6627F7, paramsKey=0012, params=95d01b039891fc2ade06f4ea06357e786781b7ba2bb799de253bb2f5e586a6106be, appKey=0011}

二。服务端

1.签名校验

1）服务端采用同样的签名算法获得sign,如果与客服端的签名相同则进入下一步


2）参数解密（即返回加密前的参数）
String json = AES.Decrypt(params, paramsSecret);



