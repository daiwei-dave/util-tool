
java中的数据类型，可分为两类： 
1.基本数据类型，也称原始数据类型。byte,short,char,int,long,float,double,boolean 
  他们之间的比较，应用双等号（==）,比较的是他们的值。 
2.复合数据类型(类) 
  当他们用（==）进行比较的时候，比较的是他们在内存中的存放地址，
  所以，除非是同一个new出来的对象，他们的比较后的结果为true，否则比较后结果为false。 
  JAVA当中所有的类都是继承于Object这个基类的，在Object中的基类中定义了一个equals的方法，
  这个方法的初始行为是比较对象的内存地 址，但在一些类库当中这个方法被覆盖掉了，
  如String,Integer,Date在这些类当中equals有其自身的实现，而不再是比较类在堆内存中的存放地址了。
  对于复合数据类型之间进行equals比较，在没有覆写equals方法的情况下，
  他们之间的比较还是基于他们在内存中的存放位置的地址值的，因为Object的equals方法也是用双等号（==）进行比较的，
  所以比较后的结果跟双等号（==）的结果相同。
  
  
  
  比如北京，四川地址不同，但可能有相同的口号。



1.int 和Integer 有什么区别
public class test1 {
	 public static void main(String[] args) {  
		 // 如果字面量的值在-128到127之间，那么不会new新的Integer对象，而是直接引用常量池中的Integer对象
	        Integer a = new Integer(3); 
	        Integer b = 3;              // 将3自动装箱成Integer类型  
	        int c = 3;  
	        System.out.println(a == b); // false 两个引用没有引用同一对象  
	        System.out.println(a == c); // true a自动拆箱成int类型再和c比较  
	    }  
}

2.String类
 public static void main(String[] args) {  
		 String s=new String("haha");
		 //先申请一个存储空间，在赋值给s3。创建了2个字符串对象，一个是静态存储区的"xyz",
		 一个是用new创建在堆上的对象。
		 String s3=new String("haha");
		 System.out.println(s==s3);	
//		 s="haha";
//		 System.out.println(s);
		 String s1="haha";
		 //并没有申请一个存储空间
		 String s2="haha";
		 System.out.println(s1==s2);
		 System.out.println(s.hashCode());(1)如果两个对象相同（equals方法返回true），
		 那么它们的hashCode值一定要相同；(2)如果两个对象的hashCode相同，它们并不一定相同。
		 System.out.println(s1.hashCode());			
		 System.out.println(s==s1);
}
输出为：
false
true
3194802
3194802
false
