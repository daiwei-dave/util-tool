1 多对一

1.1
javabean（Item.java）

private  User manager;			//子栏目版主


1.2 
Item.hbm.xml


<many-to-one name="manager" class="com.sanqing.po.User">

1.3 调用
@Test
	public void test() {
		ItemService itemService= (ItemService) context.getBean("itemService");
		Item item=new Item();
		item.setItemName("java2");
		item.setItemDescription("hhhha");
		User user=new User();
		user.setUsername("admin12");
//		user.setPassword("12345");
		item.setManager(user);
		itemService.addItem(item);
		System.out.println(item.getManager().getPassword());
		
	}
2.一对多
用于映射集合类的 Hibernate 映射元素取决于接口的类型。比如，<set> 元素用来映射 Set 类型
的属性。
2.1
javabean

private Set<Topic> topics;		//子栏目下主题列表

2.2
SubItem.hbm.xml

//name的值与SubItem的javabean对应
<set name="topics" cascade="all" lazy="false">			//column的值与topic的数据表中的列值对应
			<key column="subItemID"></key>				<!-- 配置外键(外键存放父亲的主键),即通过subItemID查询所有topics -->
			<one-to-many class="com.sanqing.po.Topic"/><!-- 配置关联类 -->
		</set>

参数说明
1.	cascade="all"，表示SubItem进行操作如save和update时，其对应的表topic也会跟着做相关操作
		



2.3 测试案例
@Test
	public void testquerySubItemByID() {
		SubItemDAO subItemDAO= (SubItemDAO) context.getBean("subItemDAO");
		SubItem subItem=subItemDAO.querySubItemByID(1);		
		//System.out.println(subItem.toString());
		Set<Topic> topics=subItem.getTopics();
		for (Topic topic : topics) {
			System.out.println(topic.toString());
		}
		
	}
	
	
输出为：（为截取的部分输出）

Topic [topicID=44, title=java注解, content=java注解的使用
Topic [topicID=41, title=测试发帖, content=<p>&nbsp;</p


3.一对一






二。
lazy（可选）：通过设置 lazy="false"，所有的延迟加载（Lazy fetching）功能将被全部禁
用（disabled）。	
unique="true"：  不允许重复	

cascade="all"：  一个表做一项操作其关联的表也要做相应操做（若有其对应）
		